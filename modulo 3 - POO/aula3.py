# @property - um getter no modo PythÃ´nico
# getter - um mÃ©todo para obter um atributo
# cor -> get_cor()
# modo pythÃ´nico - modo do Python de fazer coisas
# @property Ã© uma propriedade do objeto, ela
# Ã© um mÃ©todo que se comporta como um
# atributo ðŸ¤¯ ðŸ¤¯ ðŸ¤¯
# Geralmente Ã© usada nas seguintes situaÃ§Ãµes:
# - como getter
# - p/ evitar quebrar cÃ³digo cliente
# - p/ habilitar setter
# - p/ executar aÃ§Ãµes ao obter um atributo
# CÃ³digo cliente - Ã© o cÃ³digo que usa seu cÃ³digo

class Caneta:
    def __init__(self, cor="Azul", tipo_escrita= 'Esferografica'):
        self.__cor_tinta = cor
        self.tipo_escrita = tipo_escrita

    @property
    def cor(self):
        print('ESTOU NO GETTER')
        return self.__cor_tinta
    
    @cor.setter
    def cor(self, valor: str) -> None:
        print('ESTOU NO SETTER')
        self.__cor_tinta = valor

    
    @property
    def tipo (self) -> str :
        return self.tipo_escrita
###########################


caneta = Caneta()

print(caneta.cor)
caneta.cor = 'Laranja'
print(caneta.cor)
print(caneta.tipo)
